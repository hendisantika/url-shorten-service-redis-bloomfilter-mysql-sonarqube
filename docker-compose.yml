version: "3.8"

services:

  mysql-database:
    image: mysql:latest
    container_name: mysql-shorten-db
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: shorten
      MYSQL_USER: tugay
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456   
    command: --character-set-server=utf8 --collation-server=utf8_general_ci
    volumes:
      - /$PWD/mysql-data:/var/lib/mysql
    networks: 
      - test-network 

  redis:
    image: "redislabs/rebloom:latest"
    container_name: redis-shorten
    ports:
      - "6379:6379"
    volumes:
      - /$PWD/redis-data:/var/lib/redis
    networks:
      - test-network

  sonarqube:
    image: sonarqube:10.3.0-community
    container_name: sonar
    restart: always
    depends_on:
      - postgres
    environment:
      SONAR_JDBC_URL: 'jdbc:postgresql://host.docker.internal:5432/sonar'
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - '/$PWD/sonarqube/sonarqube_data:/opt/sonarqube/data'
      - '/$PWD/sonarqube/sonarqube_extensions:/opt/sonarqube/extensions'
      - '/$PWD/sonarqube/sonarqube_logs:/opt/sonarqube/logs'
    ports:
      - '9000:9000'
    networks:
      - test-network

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    volumes:
      - '/$PWD/postgres/postgres_data:/var/lib/postgresql/data'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: sonar
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    networks:
      - test-network

  
networks: 
  test-network:
    driver: bridge


